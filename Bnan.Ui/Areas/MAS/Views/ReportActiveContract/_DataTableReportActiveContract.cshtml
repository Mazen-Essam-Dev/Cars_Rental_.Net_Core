@using Bnan.Core.Extensions
@using Bnan.Ui.ViewModels.MAS

@model listReportActiveContractVM
@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> options
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}


<table class=" tables-style table table-borderless " id="Table">
    <thead class="sticky-top">
        <tr>
            <th>@localizer["the_TGA_n"]</th>
            <th>@localizer["the_Contract_n"]</th>
            <th>@localizer["the_Invoice_n"]</th>
            <th class="DifferAlign" style="max-width:450px;"> @localizer["the_Car_and_Renter"]</th>
            <th class="DifferAlign"> @localizer["the_Lessor_n"]  </th>
            <th class="DifferAlign">@localizer["the_Contract_n"]</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            var no = 1;
        }
        @foreach (var item in Model.all_contractBasic)
        {

            var endDate = item.CrCasRenterContractBasicExpectedEndDate;
            var Contract_pdf = "#";
            var Contract_pdf_blank = "";
            var Invoice_pdf = "#";
            var Invoice_pdf_blank = "";
            var TGA_pdf = "#";
            var TGA_pdf_blank = "";
            var invoce_ar = Model.all_Invoices?.Find(x => x.id_key == item.CrCasRenterContractBasicNo)?.nameAr ?? "";
            var invoce_en = Model.all_Invoices?.Find(x => x.id_key == item.CrCasRenterContractBasicNo)?.nameEn ?? "";

            if (item.CrCasRenterContractBasicPdfFile != null && item.CrCasRenterContractBasicPdfFile != "") { Contract_pdf = item.CrCasRenterContractBasicPdfFile?.ToString().Replace("~", ""); Contract_pdf_blank = "_blank"; }
            if (item.CrCasRenterContractBasicPdfTga != null && item.CrCasRenterContractBasicPdfTga != "") { TGA_pdf = item.CrCasRenterContractBasicPdfTga?.ToString().Replace("~", ""); TGA_pdf_blank = "_blank"; }
            if (invoce_en != null && invoce_en != "") { Invoice_pdf = invoce_en?.ToString().Replace("~", ""); Invoice_pdf_blank = "_blank"; }

            @*            @if (item.CrCasRenterContractBasicStatus == Status.Closed)
            {
                endDate = item.CrCasRenterContractBasicActualCloseDateTime;
            }*@

            <tr>
                <td><a href="@TGA_pdf" target="@TGA_pdf_blank"><img class="pdf-Tableicons" src="~/MasSystem/images/naql.svg"></a></td>
                <td><a href="@Contract_pdf" target="@Contract_pdf_blank"><img src="~/MasSystem/images/Rectangle 197.svg"></a></td>
                <td><a href="@Invoice_pdf" target="@Invoice_pdf_blank"><img src="~/MasSystem/images/Rectangle 197.svg"></a></td>

                @if (requestCulture?.RequestCulture.UICulture.Name == "en-US")
                {
                    <td class="DifferAlign">
                        <p class="FirstLineP">@Model.all_RentersMas?.Find(x => x.CrMasRenterInformationId == item.CrCasRenterContractBasicRenterId)?.CrMasRenterInformationEnName</p>
                        <div class="car-name-color">
                            <p class="FirstLineP">@item.CarEnName</p>
                            <div class="CarColor" style="background: #636C14;"></div>
                        </div>
                    </td>
                    <td class="DifferAlign"><p> @Model.all_lessors?.Find(x => x.CrMasLessorInformationCode == item.CrCasRenterContractBasicLessor)?.CrMasLessorInformationEnShortName </p></td>
                    <td class="DifferAlign">
                        @if (item.CrCasRenterContractBasicCopy > 0)
                        {
                            <p class="FirstLineP"> <span style="color:red">(@item.CrCasRenterContractBasicCopy)</span>  @item.CrCasRenterContractBasicNo </p>
                        }
                        else
                        {
                            <p class="FirstLineP"> @item.CrCasRenterContractBasicNo </p>
                        }
                        <div class="d-flex justify-content-end gap-2">
                            <p class="secondLineP-extra-small"> <span class="time">  @endDate?.ToString("HH:mm - ", CultureInfo.InvariantCulture) </span> @endDate?.ToString("dd/MM/yyyy ", CultureInfo.InvariantCulture) </p>
                            <p class="secondLineP-extra-small"> <span class="time">  @item.CrCasRenterContractBasicExpectedStartDate?.ToString("HH:mm - ", CultureInfo.InvariantCulture) </span> @item.CrCasRenterContractBasicExpectedStartDate?.ToString("dd/MM/yyyy ", CultureInfo.InvariantCulture)</p>
                        </div>
                    </td>
                }
                else
                {
                    <td class="DifferAlign">
                        <p class="FirstLineP">@Model.all_RentersMas?.Find(x => x.CrMasRenterInformationId == item.CrCasRenterContractBasicRenterId)?.CrMasRenterInformationArName</p>
                        <div class="car-name-color">
                            <p class="FirstLineP">@item.CarArName</p>
                            <div class="CarColor" style="background: #636C14;"></div>
                        </div>
                    </td>
                    <td class="DifferAlign"><p> @Model.all_lessors?.Find(x => x.CrMasLessorInformationCode == item.CrCasRenterContractBasicLessor)?.CrMasLessorInformationArShortName </p></td>
                    <td class="DifferAlign">
                        @if (item.CrCasRenterContractBasicCopy > 0)
                        {
                            <p class="FirstLineP"> <span style="color:red">(@item.CrCasRenterContractBasicCopy)</span>  @item.CrCasRenterContractBasicNo </p>
                        }
                        else
                        {
                            <p class="FirstLineP"> @item.CrCasRenterContractBasicNo </p>
                        }
                        <div class="d-flex justify-content-end gap-2">
                            <p class="secondLineP-extra-small">@item.CrCasRenterContractBasicExpectedStartDate?.ToString("dd/MM/yyyy ", CultureInfo.InvariantCulture) <span class="time">  @item.CrCasRenterContractBasicExpectedStartDate?.ToString(" - HH:mm", CultureInfo.InvariantCulture) </span></p>
                            <p class="secondLineP-extra-small">@endDate?.ToString("dd/MM/yyyy ", CultureInfo.InvariantCulture) <span class="time"> @endDate?.ToString(" - HH:mm", CultureInfo.InvariantCulture) </span></p>
                        </div>
                    </td>
                }
                <td>
                    <div class="filter-number-td">
                        @{
                            var filterColor = "";
                            var filterStyleColor = "";
                            if (item.CrCasRenterContractBasicStatus == Status.Active) { filterColor = "filter3-div"; filterStyleColor = "background-color:#22B14C"; }
                            else if (item.CrCasRenterContractBasicStatus == Status.Expire) filterColor = "filter3-div";
                            //else if (item.CrCasRenterContractBasicStatus == Status.Closed) filterColor = "filter2-div";
                        }
                        <div class="filters @filterColor" style="@filterStyleColor"></div>
                        <div>@no</div>
                    </div>
                </td>
            </tr>
            no++;
        }

    </tbody>

</table>