@using Bnan.Core.Extensions;
@using Bnan.Ui.ViewModels.MAS;
@using Microsoft.AspNetCore.Identity;
@using Newtonsoft.Json;
﻿@using Microsoft.AspNetCore.Builder;
@using Microsoft.AspNetCore.Localization;
@using Microsoft.AspNetCore.Http.Features;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Microsoft.EntityFrameworkCore;
@using Microsoft.Extensions.Options;
@using System.Globalization;
@model MasStatistics_ContractsVM
@inject UserManager<CrMasUserInformation> userManager
@inject SignInManager<CrMasUserInformation> signinManager
@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> options
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
    ViewData["Page-title"] = @localizer["ContractStatistics Data"];
    ViewData["Page-Hint"] = @localizer["ContractStatistics Hint"];
}

<div class="col my-2 d-flex align-items-center justify-content-center">
    <div class="container NewUpdate-container">
        <div class="row justify-content-center">
            <div class="col-lg-11">
                <div class="row g-3 my-3">
                    <div class="col-md-12">
                        <input type="text" asp-for="thisFunctionRunned" id="thisFunctionRunned" hidden />
                        <h3>@localizer["CarContractStatistics_Statistics_Contracts_n"]</h3>
                    </div>
                    <div class="col-md-12 ">
                        <p class="d-inline-block headLines">@localizer["ContractStatistics_count_Contracts"] : </p>
                        @*<p class="d-inline-block Saved-data headLines" id="Count_var" name="Count_var">@(Model.Contracts_Count?.ToString("0") ?? "0") @localizer["ContractStatistics_Contract"]</p>*@
                        <p class="d-inline-block Saved-data headLines" id="Count_var" name="Count_var">@(Model.Contracts_Count?.ToString("0") ?? "0")</p>

                    </div>
                    <div class="col-md-12">
                        <div class="col-lg-8">
                            <div class="col-12 d-flex align-items-center Search-col  flex-wrap gap-2">
                                <div class="col-xl-4 d-flex  gap-3 align-items-center">
                                    <label for="start-date">@localizer["From_n"]</label>
                                    <input type="date" class="form-control inputs custom-date-input" id="start_date" name="start_date" required/>
                                </div>
                                <div class="col-xl-4 d-flex  gap-3 align-items-center">
                                    <label for="end-date">@localizer["To_n"]</label>
                                    <input type="date" class="form-control inputs custom-date-input" id="end_date" name="end_date" required/>
                                </div>

                                <button type="button" class="btn btn-standard" id="btn_view" name="btn_view" onclick="btn_view_clicked()">@localizer["View_n"]</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="row mt-3 g-2 justify-content-between">
                            <div class="col-lg-3">
                                <p class="headLines">@localizer["RenterStatistics_Type_n"]</p>
                                <div class="row">
                                    <div class="col-4 col-lg-9">
                                        <button class="btn stat-btn active-stat-btn"
                                                onclick="handleButtonClick(this, brandChart)">
                                            @localizer["CarStatistics_Brand"]
                                        </button>
                                    </div>
                                    <div class="col-4 col-lg-9">
                                        <button class="btn stat-btn"
                                                onclick="handleButtonClick(this, modelChart)">
                                            @localizer["CarStatistics_Model"]
                                        </button>
                                    </div>
                                    <div class="col-4 col-lg-9">
                                        <button class="btn stat-btn"
                                                onclick="handleButtonClick(this, categoryChart)">
                                            @localizer["CarStatistics_Category"]
                                        </button>
                                    </div>

                                    <div class="col-4 col-lg-9">
                                        <button class="btn stat-btn"
                                                onclick="handleButtonClick(this, yearChart)">
                                            @localizer["CarStatistics_year"]
                                        </button>
                                    </div>

                                </div>
                            </div>
                            <div class="col-lg-9 text-center charts-border">
                                <canvas id="myChart"></canvas>

                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>
            <a asp-area="CAS" asp-controller="Home" asp-action="Index" data-bs-toggle="tooltip" data-bs-placement="top"
           data-bs-custom-class="custom-tooltip" data-bs-title="@localizer["BackToHome"]"
           class="new-Page-icon"><img src="~/MasSystem/images/back to main.svg" alt="man"></a>
    </div>
</div>




@section Scripts {


    <!--- @*<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>*@ --->
    <script src="~/MasSystem/js/chart.js"></script>
            
<!---@*    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="~/MasSystem/scripts/Scripts.js"></script>>*@--->
    <script>

        $(document).ready(function () {
        $("#start_date").val('@Model.start_Date'); //  اضافة قيمة البداية من ال viewModel
        $("#end_date").val('@Model.end_Date'); //  اضافة قيمة النهاية من ال viewModel

        $("#min-loader").toggleClass("d-none", true); // اخفاء loader بعد انتهاء تحميل الصفحة

        });
    </script>

    <script>
        function btn_view_clicked(){
            var thisFunctionNow = $("#thisFunctionRunned").val();
            
            if (thisFunctionNow == "brandChart") {
                brandChart();
            }
            else if (thisFunctionNow == "modelChart") {
                modelChart();
            }
            else if (thisFunctionNow == "categoryChart") {
                categoryChart();
            }
            else if (thisFunctionNow == "yearChart") {
                yearChart();
            }
           
            
        }
        window.addEventListener('load', function () {
            brandChart()
            $("#thisFunctionRunned").val("brandChart");
        })
    </script>

    <script>
        async function GetAllBy_Brands() {  // -- 1
            $("#min-loader").removeClass("d-none");
            return new Promise((resolve, reject) => {
                const start = $("#start_date").val(); // الحصول على قيمة البداية
                const end = $("#end_date").val(); // الحصول على قيمة النهاية
                $.ajax({
                    type: "GET",
                    data: {
                        start: start, end: end
                    },
                    url: "@Url.Action("GetAllBy_Brands", "CarContractStatistics", new { Area = "MAS" })", // -- 2
                    success: function (response) {
                        $("#min-loader").toggleClass("d-none", true);
                        //$(".chart22").html(response);
                        console.log(response.list_chartBranchDataVM);
                        //$("#Count_var").text(response.count + " " + "@localizer["ContractStatistics_Contract"]"); // لتعديل عدد العقود في p
                        $("#Count_var").text(" " + response.count + " "); // لتعديل عدد العقود في p
                        $("#thisFunctionRunned").val("brandChart"); // لتحديث ان هذه اخر فانكشن معروضة   // -- 3
                        resolve(response.list_chartBranchDataVM); // عند نجاح الطلب، نقوم بإرجاع البيانات باستخدام resolve
                    },
                    error: function (error) {
                        reject(error); // إذا حدث خطأ في الطلب، نستخدم reject
                    }
                });
            });
        }

        async function GetAllBy_Models() {  // -- 1
            $("#min-loader").removeClass("d-none");
            return new Promise((resolve, reject) => {
                const start = $("#start_date").val(); // الحصول على قيمة البداية
                const end = $("#end_date").val(); // الحصول على قيمة النهاية
                $.ajax({
                    type: "GET",
                    data: {
                        start: start, end: end
                    },
                    url: "@Url.Action("GetAllBy_Models", "CarContractStatistics", new { Area = "MAS" })", // -- 2
                    success: function (response) {
                        $("#min-loader").toggleClass("d-none", true);
                        //$(".chart22").html(response);
                        console.log(response.list_chartBranchDataVM);
                        //$("#Count_var").text(response.count +" "+ "@localizer["ContractStatistics_Contract"]"); // لتعديل عدد العقود في p
                        $("#Count_var").text(" " + response.count + " "); // لتعديل عدد العقود في p
                        $("#thisFunctionRunned").val("modelChart"); // لتحديث ان هذه اخر فانكشن معروضة   // -- 3
                        resolve(response.list_chartBranchDataVM); // عند نجاح الطلب، نقوم بإرجاع البيانات باستخدام resolve
                    },
                    error: function (error) {
                        reject(error); // إذا حدث خطأ في الطلب، نستخدم reject
                    }
                });
            });
        }

        async function GetAllBy_Categos() {  // -- 1
            $("#min-loader").removeClass("d-none");
            return new Promise((resolve, reject) => {
                const start = $("#start_date").val(); // الحصول على قيمة البداية
                const end = $("#end_date").val(); // الحصول على قيمة النهاية
                $.ajax({
                    type: "GET",
                    data: {
                        start: start, end: end
                    },
                    url: "@Url.Action("GetAllBy_Categos", "CarContractStatistics", new { Area = "MAS" })", // -- 2
                    success: function (response) {
                        $("#min-loader").toggleClass("d-none", true);
                        //$(".chart22").html(response);
                        console.log(response.list_chartBranchDataVM);
                        //$("#Count_var").text(response.count + " " + "@localizer["ContractStatistics_Contract"]"); // لتعديل عدد العقود في p
                        $("#Count_var").text(" " + response.count + " "); // لتعديل عدد العقود في p
                        $("#thisFunctionRunned").val("categoryChart"); // لتحديث ان هذه اخر فانكشن معروضة   // -- 3
                        resolve(response.list_chartBranchDataVM); // عند نجاح الطلب، نقوم بإرجاع البيانات باستخدام resolve
                    },
                    error: function (error) {
                        reject(error); // إذا حدث خطأ في الطلب، نستخدم reject
                    }
                });
            });
        }

        async function GetAllBy_Years() {  // -- 1
            $("#min-loader").removeClass("d-none");
            return new Promise((resolve, reject) => {
                const start = $("#start_date").val(); // الحصول على قيمة البداية
                const end = $("#end_date").val(); // الحصول على قيمة النهاية
                $.ajax({
                    type: "GET",
                    data: {
                        start: start, end: end
                    },
                    url: "@Url.Action("GetAllBy_Years", "CarContractStatistics", new { Area = "MAS" })", // -- 2
                    success: function (response) {
                        $("#min-loader").toggleClass("d-none", true);
                        //$(".chart22").html(response);
                        console.log(response.list_chartBranchDataVM);
                        //$("#Count_var").text(response.count + " " + "@localizer["ContractStatistics_Contract"]"); // لتعديل عدد العقود في p
                        $("#Count_var").text(" " + response.count + " "); // لتعديل عدد العقود في p
                        $("#thisFunctionRunned").val("yearChart"); // لتحديث ان هذه اخر فانكشن معروضة   // -- 3
                        resolve(response.list_chartBranchDataVM); // عند نجاح الطلب، نقوم بإرجاع البيانات باستخدام resolve
                    },
                    error: function (error) {
                        reject(error); // إذا حدث خطأ في الطلب، نستخدم reject
                    }
                });
            });
        }

        
        let chartInstance = null;

        function handleButtonClick(button, chartFunction) {
            document.querySelectorAll('.stat-btn').forEach(btn => btn.classList.remove('active-stat-btn'));

            button.classList.add('active-stat-btn');

            chartFunction();
        }
        function createChart(chartType, chartData, chartOptions) {
            const ctx = document.getElementById('myChart').getContext('2d');

            if (chartInstance) {
                chartInstance.destroy();
            }

            chartInstance = new Chart(ctx, {
                type: chartType,
                data: chartData,
                options: chartOptions
            });
        }

        async function brandChart() {
            let listBranchData = await GetAllBy_Brands();

            let labelsBranch;
            if ('@requestCulture?.RequestCulture.UICulture.Name' == "en-US") {

                labelsBranch = listBranchData.map(function (paymentMethod) {
                    return paymentMethod.enName;
                });
            }
            else {
                labelsBranch = listBranchData.map(function (paymentMethod) {
                    return paymentMethod.arName;
                });
            }

            let labelsBranch2;
            if ('@requestCulture?.RequestCulture.UICulture.Name' == "en-US") {
                // تحويل البيانات إلى تنسيق مناسب
                labelsBranch2 = listBranchData.map(item => ({
                    data: [{ x: item.enName, y: item.value }],
                    backgroundColor: item.backgroundColor,
                    borderColor: item.borderColor,
                    pointRadius: 5
                }));
            }
            else {
                // تحويل البيانات إلى تنسيق مناسب
                labelsBranch2 = listBranchData.map(item => ({
                    data: [{ x: item.arName, y: item.value }],
                    backgroundColor: item.backgroundColor,
                    borderColor: item.borderColor,
                    pointRadius: 5
                }));
            }
            createChart('scatter', {
                datasets: labelsBranch2
            }, {
                responsive: true,
                animations: {
                    radius: {
                        duration: 1000,
                        easing: 'easeInOutQuad',
                        loop: true,
                        from: 5,
                        to: 8
                    },
                    x: {
                        type: 'number',
                        duration: 1000,
                        easing: 'easeInOutQuad'
                    },
                    y: {
                        type: 'number',
                        duration: 1000,
                        easing: 'easeInOutQuad'
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    },
                    title: {
                        display: true,
                        text: "@localizer["CarContract_inChart_Brand"]",
                        font: {
                            family: "'Cairo', sans-serif",
                            size: 15,
                            weight: '600'
                        },
                        padding: {
                            top: 20,
                            bottom: 25
                        }
                    }
                },
                scales: {
                    x: {
                        type: 'category',
                        labels: labelsBranch,
                        ticks: {
                            display: true,
                            font: {
                                family: "'Cairo', sans-serif",
                                size: 12
                            }
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            display: true
                        }
                    }
                }
            });
        }
        async function modelChart() {
            let listBranchData = await GetAllBy_Models();

            let labelsBranch;
            if ('@requestCulture?.RequestCulture.UICulture.Name' == "en-US") {

                labelsBranch = listBranchData.map(function (paymentMethod) {
                    return paymentMethod.enName;
                });
            }
            else {
                labelsBranch = listBranchData.map(function (paymentMethod) {
                    return paymentMethod.arName;
                });
            }

            let labelsBranch2;
            if ('@requestCulture?.RequestCulture.UICulture.Name' == "en-US") {
                // تحويل البيانات إلى تنسيق مناسب
                labelsBranch2 = listBranchData.map(item => ({
                    data: [{ x: item.enName, y: item.value }],
                    backgroundColor: item.backgroundColor,
                    borderColor: item.borderColor,
                    pointRadius: 5
                }));
            }
            else {
                // تحويل البيانات إلى تنسيق مناسب
                labelsBranch2 = listBranchData.map(item => ({
                    data: [{ x: item.arName, y: item.value }],
                    backgroundColor: item.backgroundColor,
                    borderColor: item.borderColor,
                    pointRadius: 5
                }));
            }
            createChart('scatter', {
                datasets: labelsBranch2
            }, {
                responsive: true,
                animations: {
                    radius: {
                        duration: 1000,
                        easing: 'easeInOutQuad',
                        loop: true,
                        from: 5,
                        to: 8
                    },
                    x: {
                        type: 'number',
                        duration: 1000,
                        easing: 'easeInOutQuad'
                    },
                    y: {
                        type: 'number',
                        duration: 1000,
                        easing: 'easeInOutQuad'
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    },
                    title: {
                        display: true,
                        text: "@localizer["CarContract_inChart_Model"]",
                        font: {
                            family: "'Cairo', sans-serif",
                            size: 15,
                            weight: '600'
                        },
                        padding: {
                            top: 20,
                            bottom: 25
                        }
                    }
                },
                scales: {
                    x: {
                        type: 'category',
                        labels: labelsBranch,
                        ticks: {
                            display: true,
                            font: {
                                family: "'Cairo', sans-serif",
                                size: 12
                            }
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            display: true
                        }
                    }
                }
            });
        }
        async function categoryChart() {
            let listBranchData = await GetAllBy_Categos();

            let labelsBranch;
            if ('@requestCulture?.RequestCulture.UICulture.Name' == "en-US") {

                labelsBranch = listBranchData.map(function (paymentMethod) {
                    return paymentMethod.enName;
                });
            }
            else {
                labelsBranch = listBranchData.map(function (paymentMethod) {
                    return paymentMethod.arName;
                });
            }

            let dataValues = listBranchData.map(function (paymentMethod) {
                return paymentMethod.value;
            });
            
            createChart('polarArea', {
                labels: labelsBranch,
                datasets: [{
                    data: dataValues,
                    backgroundColor: [
                        "rgba(255, 99, 132, 0.6)", "rgba(54, 162, 235, 0.6)", "rgba(75, 192, 192, 0.6)", "rgba(255, 206, 86, 0.6)",
                        '#1A31F0', '#145656', '#F5A623', '#9B59B6', '#E74C3C', '#3498DB', '#2ECC71', '#F39C12',
                        '#8E44AD', '#16A085', '#D35400', '#1ABC9C', '#9C27B0', '#FF5722', '#00BFFF',
                    ],
                    borderColor: [
                        'rgb(255, 255, 255)',


                    ],
                    borderWidth: 2
                }]
            }, {
                responsive: true,

                scales: {
                    r: {
                        pointLabels: {
                            display: false, // لإخفاء الاسماء من داخل الرسمة الدائرية
                            centerPointLabels: true,
                            font: {
                                family: "'Cairo', sans-serif",
                                size: 12
                            }
                        }
                    }
                },
                plugins: {
                    legend: {
                        position: 'left',
                        labels: {
                            font: {
                                family: "'Cairo', sans-serif",
                                size: 12
                            }
                        }
                    },
                    title: {
                        display: true,
                        text: "@localizer["CarContract_inChart_Category"]",
                        font: {
                            family: "'Cairo', sans-serif",
                            size: 15,
                            weight: '600'
                        },
                        padding: {
                            top: 20,
                            bottom: 25
                        }
                    }
                }
            });
        }
        async function yearChart() {
            let listBranchData = await GetAllBy_Years();


            let labelsBranch;
            if ('@requestCulture?.RequestCulture.UICulture.Name' == "en-US") {

                labelsBranch = listBranchData.map(function (paymentMethod) {
                    return paymentMethod.enName;
                });
            }
            else {
                labelsBranch = listBranchData.map(function (paymentMethod) {
                    return paymentMethod.arName;
                });
            }

            let dataValues = listBranchData.map(function (paymentMethod) {
                return paymentMethod.value;
            });

            createChart('polarArea', {
                labels: labelsBranch,
                datasets: [{
                    data: dataValues,
                    backgroundColor: [
                        "rgba(255, 99, 132, 0.6)", "rgba(54, 162, 235, 0.6)", "rgba(75, 192, 192, 0.6)", "rgba(255, 206, 86, 0.6)",
                        '#1A31F0', '#145656', '#F5A623', '#9B59B6', '#E74C3C', '#3498DB', '#2ECC71', '#F39C12',
                        '#8E44AD', '#16A085', '#D35400', '#1ABC9C', '#9C27B0', '#FF5722', '#00BFFF',
                    ],
                    borderColor: [
                        'rgb(255, 255, 255)',


                    ],
                    borderWidth: 2
                }]
            }, {
                responsive: true,

                scales: {
                    r: {
                        pointLabels: {
                            display: false, // لإخفاء الاسماء من داخل الرسمة الدائرية
                            centerPointLabels: true,
                            font: {
                                family: "'Cairo', sans-serif",
                                size: 12
                            }
                        }
                    }
                },
                plugins: {
                    legend: {
                        position: 'left',
                        labels: {
                            font: {
                                family: "'Cairo', sans-serif",
                                size: 12
                            }
                        }
                    },
                    title: {
                        display: true,
                        text: "@localizer["CarContract_inChart_Year"]",
                        font: {
                            family: "'Cairo', sans-serif",
                            size: 15,
                            weight: '600'
                        },
                        padding: {
                            top: 20,
                            bottom: 25
                        }
                    }
                }
            });
        }


    </script>
    
}

