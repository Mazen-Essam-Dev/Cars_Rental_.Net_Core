@using Bnan.Core.Extensions
@model listReportCarContractVM
@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> options
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<div class="col-lg-12 col-xl-8 dataTable22">
    <div class="row">
        <div class="col-md-4 p-0">
            <div class="row">
                <div class="col-auto">
                    <p>@localizer["Contract_s_Value"]</p>
                </div>
                <div class=" col-auto Saved-data">
                    <p>@Model.summition?.contract_Values_Total?.ToString("N2", CultureInfo.InvariantCulture)</p>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-auto">
                    <p>@localizer["RentalDay_sss"]</p>
                </div>
                <div class=" col-auto Saved-data">
                    <p>@Model.summition?.Days_Count?.ToString("N0", CultureInfo.InvariantCulture)</p>
                </div>
            </div>
        </div>
        <div class="col-md-4 p-0">
            <div class="row">
                <div class="col-auto">
                    <p>@localizer["ContractCount_s"]</p>
                </div>
                <div class=" col-auto Saved-data">
                    <p>@Model.summition?.Contracts_Count?.ToString("0")</p>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-auto">
                    <p>@localizer["the_KM_Cut_n"]</p>
                </div>
                <div class=" col-auto Saved-data">
                    <p>@Model.summition?.km_Count?.ToString("N2", CultureInfo.InvariantCulture)</p>
                </div>
            </div>
        </div>

    </div>
</div>



<div class="col-md-12">
    <div class="row table-row px-3">
        <div class="col  scroll-extended-table-div scroll-table-div  table-responsive-sm  w-100  dataTable22">
            <table class=" tables-style table table-borderless " id="Table">
                <thead class="sticky-top">
                    <tr>
                        <th>@localizer["the_TGA_n"]</th>
                        <th>@localizer["the_Contract_n"]</th>
                        <th>@localizer["the_Invoice_n"]</th>
                        <th>@localizer["the_KM_Cut_n"]</th>
                        <th>@localizer["the_DaysCount_n"]</th>
                        <th> @localizer["the_Rental_Value_n"]</th>
                        <th class="DifferAlign"> @localizer["the_Renter"]</th>
                        <th class="DifferAlign">@localizer["the_Contract_n"]</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var no = 1;
                    }
                    @foreach (var item in Model.all_contractBasic)
                    {

                        int? km = 0;
                        var days = item.CrCasRenterContractBasicExpectedRentalDays;
                        var contractValue = item.CrCasRenterContractBasicExpectedTotal;
                        var endDate = item.CrCasRenterContractBasicExpectedEndDate;
                        var Contract_pdf = "#";
                        var Contract_pdf_blank = "";
                        var Invoice_pdf = "#";
                        var Invoice_pdf_blank = "";
                        var TGA_pdf = "#";
                        var TGA_pdf_blank = "";
                        var invoce_ar = Model.all_Invoices?.Find(x => x.CrCasAccountInvoiceReferenceContract == item.CrCasRenterContractBasicNo)?.CrCasAccountInvoicePdfFile ?? "";
                        var invoce_en = Model.all_Invoices?.Find(x => x.CrCasAccountInvoiceReferenceContract == item.CrCasRenterContractBasicNo)?.CrCasAccountInvoicePdfFile ?? "";
                        if (requestCulture?.RequestCulture.UICulture.Name == "en-US")
                        {
                            if (item.CrCasRenterContractBasicPdfFile != null && item.CrCasRenterContractBasicPdfFile != "") { Contract_pdf = item.CrCasRenterContractBasicPdfFile?.ToString().Replace("~", ""); Contract_pdf_blank = "_blank"; }
                            if (item.CrCasRenterContractBasicPdfTga != null && item.CrCasRenterContractBasicPdfTga != "") { TGA_pdf = item.CrCasRenterContractBasicPdfTga?.ToString().Replace("~", ""); TGA_pdf_blank = "_blank"; }
                            if (invoce_en != null && invoce_en != "") { Invoice_pdf = invoce_en?.ToString().Replace("~", ""); Invoice_pdf_blank = "_blank"; }
                        }
                        else
                        {
                            if (item.CrCasRenterContractBasicPdfFile != null && item.CrCasRenterContractBasicPdfFile != "") { Contract_pdf = item.CrCasRenterContractBasicPdfFile?.ToString().Replace("~", ""); Contract_pdf_blank = "_blank"; }
                            if (item.CrCasRenterContractBasicPdfTga != null && item.CrCasRenterContractBasicPdfTga != "") { TGA_pdf = item.CrCasRenterContractBasicPdfTga?.ToString().Replace("~", ""); TGA_pdf_blank = "_blank"; }
                            if (invoce_ar != null && invoce_ar != "") { Invoice_pdf = invoce_ar?.ToString().Replace("~", ""); Invoice_pdf_blank = "_blank"; }

                        }
                        @if (item.CrCasRenterContractBasicStatus == Status.Closed)
                        {
                            km = item.CrCasRenterContractBasicActualCurrentReadingMeter - item.CrCasRenterContractBasicCurrentReadingMeter;
                            days = item.CrCasRenterContractBasicActualDays;
                            contractValue = item.CrCasRenterContractBasicActualTotal;
                            endDate = item.CrCasRenterContractBasicActualCloseDateTime;
                        }

                        <tr>
                            <td><a href="@TGA_pdf" target="@TGA_pdf_blank"><img class="pdf-Tableicons" src="~/MasSystem/images/naql.svg"></a></td>
                            <td><a href="@Contract_pdf" target="@Contract_pdf_blank"><img src="~/MasSystem/images/Rectangle 197.svg"></a></td>
                            <td><a href="@Invoice_pdf" target="@Invoice_pdf_blank"><img src="~/MasSystem/images/Rectangle 197.svg"></a></td>
                            <td><p>@km?.ToString("N2", CultureInfo.InvariantCulture)</p></td>
                            <td>
                                <p>@days</p>
                            </td>
                            <td>
                                <p>@contractValue?.ToString("N2", CultureInfo.InvariantCulture)</p>
                            </td>
                            @if (requestCulture?.RequestCulture.UICulture.Name == "en-US")
                            {
                                <td class="DifferAlign"><p>@Model.all_Renters?.Find(x => x.CrMasRenterInformationId == item.CrCasRenterContractBasicRenterId)?.CrMasRenterInformationEnName</p></td>
                                <td class="DifferAlign">
                                    @if (item.CrCasRenterContractBasicCopy > 0)
                                    {
                                        <p class="FirstLineP"> <span style="color:red">(@item.CrCasRenterContractBasicCopy)</span>  @item.CrCasRenterContractBasicNo </p>
                                    }
                                    else
                                    {
                                        <p class="FirstLineP"> @item.CrCasRenterContractBasicNo </p>
                                    }
                                    <div class="d-flex justify-content-end gap-2">
                                        <p class="secondLineP-extra-small"> <span class="time">  @endDate?.ToString("HH:mm - ", CultureInfo.InvariantCulture) </span> @endDate?.ToString("dd/MM/yyyy ", CultureInfo.InvariantCulture) </p>
                                        <p class="secondLineP-extra-small"> <span class="time">  @item.CrCasRenterContractBasicExpectedStartDate?.ToString("HH:mm - ", CultureInfo.InvariantCulture) </span> @item.CrCasRenterContractBasicExpectedStartDate?.ToString("dd/MM/yyyy ", CultureInfo.InvariantCulture)</p>
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td class="DifferAlign"><p>@Model.all_Renters?.Find(x => x.CrMasRenterInformationId == item.CrCasRenterContractBasicRenterId)?.CrMasRenterInformationArName</p></td>
                                <td class="DifferAlign">
                                    @if (item.CrCasRenterContractBasicCopy > 0)
                                    {
                                        <p class="FirstLineP"> <span style="color:red">(@item.CrCasRenterContractBasicCopy)</span>  @item.CrCasRenterContractBasicNo </p>
                                    }
                                    else
                                    {
                                        <p class="FirstLineP"> @item.CrCasRenterContractBasicNo </p>
                                    }

                                    <div class="d-flex justify-content-end gap-2">
                                        <p class="secondLineP-extra-small">@item.CrCasRenterContractBasicExpectedStartDate?.ToString("dd/MM/yyyy ", CultureInfo.InvariantCulture) <span class="time">  @item.CrCasRenterContractBasicExpectedStartDate?.ToString(" - HH:mm", CultureInfo.InvariantCulture) </span></p>
                                        <p class="secondLineP-extra-small">@endDate?.ToString("dd/MM/yyyy ", CultureInfo.InvariantCulture) <span class="time"> @endDate?.ToString(" - HH:mm", CultureInfo.InvariantCulture) </span></p>
                                    </div>
                                </td>
                            }
                            <td>
                                <div class="filter-number-td">
                                    @{
                                        var filterColor = "";
                                        var filterStyleColor = "";
                                        if (item.CrCasRenterContractBasicStatus == Status.Active) { filterColor = "filter3-div"; filterStyleColor = "background-color:#22B14C"; }
                                        else if (item.CrCasRenterContractBasicStatus == Status.Expire) filterColor = "filter3-div";
                                        else if (item.CrCasRenterContractBasicStatus == Status.Closed) filterColor = "filter2-div";
                                    }
                                    <div class="filters @filterColor" style="@filterStyleColor"></div>
                                    <div>@no</div>
                                </div>
                            </td>
                        </tr>
                        no++;
                    }

                </tbody>
            </table>

        </div>
    </div>

</div>