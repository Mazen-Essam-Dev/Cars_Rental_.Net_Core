

@using Bnan.Ui.ViewModels.CAS
@using Bnan.Core.Extensions
@model listDailyReportVM
@inject IViewLocalizer localizer
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

@{
    ViewData["Page-title"] = localizer["Edit RenterInformations Data"];
    ViewData["Page-Hint"] = localizer["Edit RenterInformations Hint"];
}


@*<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">*@



   <div class="col d-flex align-items-center justify-content-center"  style=" z-index:2;">
    <input hidden asp-for="UserId" id="UserId000" />
                <div class="container main-container">
                    <form action="">
                        <div class="row g-3">
                            <div class="col-lg-6">
                                <h3> @localizer["Daily_Report"] </h3>
                            </div>

                            <div class="row g-2">
                        <div class="col-12">
                        <div class="row">
                            <div class="col col-lg-9 d-flex flex-column-reverse">
                                <div class="row">
                                    <div class="col-lg-3 custom-margin">
                                        <div class="row">
                                            <div class="col-auto">
                                                <p> @localizer["Balance"] </p>
                                            </div>
                                            <div class=" col-auto Saved-data">
                                                <p id="p_balance">@Model.summition?.balance?.ToString("N2",CultureInfo.InvariantCulture)</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-auto col-xl-4">
                                        <div class="row">
                                            <div class="col-auto">
                                                <p> @localizer["AvailableBalance"] </p>
                                            </div>
                                            <div class=" col-auto Saved-data">
                                                <p id="p_avilableBalance">@Model.summition?.avilableBalance?.ToString("N2",CultureInfo.InvariantCulture)</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-auto">
                                        <div class="row">
                                            <div class="col-auto">
                                                <p> @localizer["ReservedBalance"] </p>
                                            </div>
                                            <div class=" col-auto Saved-data">
                                                <p id="p_reservedBalance">@Model.summition?.reservedBalance?.ToString("N2",CultureInfo.InvariantCulture)</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-auto col-lg-3 save-col">
                                    <a onclick="retrive_serials_ids_From_Datatable()" target="_blank">
                                        <img src="~/CasSys/images/Frame (8).svg"> </a>
                            </div>
                            </div>
                        </div>
                            <div class="col-md-8">
                                <div class="col-12 d-flex align-items-center Search-col  flex-wrap gap-2">
                                    <div class="col-xl-4 d-flex  gap-3 align-items-center">
                                        <label for="start-date">@localizer["From_n"]</label>
                                        <input type="date" class="form-control inputs custom-date-input" id="start_date" name="start_date" required>
                                    </div>
                                    <div class="col-xl-4 d-flex  gap-3 align-items-center">
                                        <label for="end-date">@localizer["To_n"]</label>
                                        <input type="date" class="form-control inputs custom-date-input" id="end_date" name="end_date" required>
                                    </div>

                                    <button type="button" id="btn_view" name="btn_view" class="btn btn-standard">@localizer["View_n"]</button>
                                </div>
                            </div>

                            <div class="col-md-4 search-input-col">
                                <div class="form-outline w-100" data-mdb-input-init>
                                    <span class="fa fa-search"></span>
                                    <input type="search" id="search2" class="form-control inputs search-input" aria-label="Search" autofocus autocomplete="off" />
                                </div>
                            </div>
                                <div class="col-12">
                                    <div class="row mt-2">

                                        <div class="col-md-auto col-lg-7 col-xl-8">
                                            <div class="row">
                                                <div class="col-auto col-xl-4">
                                                    <div class="row">
                                                        <div class="col-auto">
                                                            <p>@localizer["FTR_TotalCreditor"]</p>
                                                        </div>
                                                        <div class=" col-auto Saved-data">
                                                            <p id="p_credit">@Model.summition?.Creditor_Total?.ToString("N2",CultureInfo.InvariantCulture)</p>
                                                        </div>                                                            
                                                    </div>
                                                </div>
                                                <div class="col-auto">
                                                    <div class="row">
                                                        <div class="col-auto">
                                                            <p>@localizer["FTR_TotalDebitor"]</p>
                                                        </div>
                                                        <div class=" col-auto Saved-data">
                                                            <p id="p_debit">@Model.summition?.Debitor_Total?.ToString("N2",CultureInfo.InvariantCulture)</p>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                   
                                <div class="col-md-auto  col-lg-5 col-xl-4 filters-col ">
                                    <div class="filters-custom-order">

                                        <label class="form-check-label" for="all">@localizer["All_n"]</label>
                                        <input class="form-check-input custom" type="radio" name="customRadio"
                                                id="all" value="All" checked />
                                    </div>

                                    <div class="filters-custom-order">

                                        <label class="form-check-label filter2" for="Custody">@localizer["FTE_status_Custody"]</label>
                                        <input class="form-check-input custom" type="radio" name="customRadio"
                                                id="Custody" value="1" />
                                    </div>

                                    <div class="filters-custom-order">

                                        <label class="form-check-label  filter1"
                                                for="detained">@localizer["FTE_status_Reserved"]</label>
                                        <input class="form-check-input custom" type="radio" name="customRadio"
                                                id="detained" value="2" />
                                    </div>
                                    <div class="filters-custom-order">

                                        <label class="form-check-label filter3" for="deported">@localizer["FTE_status_deported"]</label>
                                        <input class="form-check-input custom" type="radio" name="customRadio"
                                                id="deported" value="3" />
                                    </div>

                                </div>
                                    </div>
                                </div>
                            </div>
                        </div>



        <div class="row table-row px-3">
            <div class="dataTable22">
                <partial name="_DataTableDailyReport" />
            </div>
        </div>
    </form>
            <a asp-area="CAS" asp-controller="Home" asp-action="Index" data-bs-toggle="tooltip" data-bs-placement="top"
               data-bs-custom-class="custom-tooltip" data-bs-title="@localizer["BackToHome"]"
               class="new-Page-icon"><img src="~/CasSys/images/back to main.svg" alt="man"></a>

</div>
</div>




@section Scripts{
    <!-- تحميل مكتبة jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- تحميل مكتبة DataTables -->
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>

    @*    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
    // تهيئة flatpickr مع التنسيق المطلوب
    flatpickr("#start_date", {
        dateFormat: "d/m/Y", // تنسيق التاريخ إلى يوم/شهر/سنة
    });
        // تهيئة flatpickr مع التنسيق المطلوب
    flatpickr("#end_date", {
        dateFormat: "d/m/Y", // تنسيق التاريخ إلى يوم/شهر/سنة
    });
</script>*@

    <script>
        $(document).ready(function () {
            $("#start_date").val('@Model.start_Date'); //  اضافة قيمة البداية من ال viewModel
            $("#end_date").val('@Model.end_Date'); //  اضافة قيمة النهاية من ال viewModel

            // لجعل الحالة حسب ما هي جاية من index نشط او الكل
            $("#min-loader").toggleClass("d-none", true); // اخفاء loader بعد انتهاء تحميل الصفحة

            //var today = new Date();
            //$("#start_date").datepicker({
            //    dateFormat: 'yy/mm/dd',  // التاريخ إلى يوم/شهر/سنة
            //    maxDate: today,
            //});
            //$("#end_date").datepicker({
            //    dateFormat: 'yy/mm/dd',  // التاريخ إلى يوم/شهر/سنة
            //    maxDate: today,
            //});

            // Close modal when close button is clicked
            $('.close').click(function () {
                $('#DataModal').modal('hide');
            });

            ///////
            // تهيئة DataTable
            var table2 = $('#Table').DataTable({
                ordering: false, // تعطيل الترتيب التلقائي للصفوف
                stateSave: true,   // حفظ حالة الجدول
            });
            end_init_ShowDatatable();
        });

        function end_init_ShowDatatable() {
            $("#min-loader").toggleClass("d-none", true);
            $("select[name='Table_length']").prepend("<option value='10000' id='A10000'>10000</option>");
            //$("select[name='Table_length'] option[value='10000']").prop("selected", true);
            $("select[name='Table_length']").val('10000').change();
            $("#Table_info").css("display", "none");
            $("#Table_previous").css("display", "none");
            $("#Table_next").css("display", "none");
            $("#Table_length").css("display", "none");
            $("#Table_filter").css("display", "none");
            $(".paginate_button").css("display", "none");
            $(".ellipsis").css("display", "none");
            $("select[name='Table_length'] option[value='10000']").prop("selected", true);
        }

        // دالة للبحث عن كلمة في جميع الصفوف
        function searchRows() {
            $("#min-loader").removeClass("d-none");// اظهار loader تحميل

            var table = $('#Table').DataTable();
            end_init_ShowDatatable();
            var keyword = $('#search2').val().toLowerCase(); // الكلمة المدخلة للبحث (تحويلها إلى حروف صغيرة)

            var totalSum_Debits = 0; // المتغير لحفظ مجموع القيم
            var totalSum_Credits = 0; // المتغير لحفظ مجموع القيم

            // إخفاء كل الصفوف أولاً
            table.rows().every(function () {
                this.nodes().to$().hide(); // إخفاء الصف
            });

            // التكرار عبر كل الصفوف
            table.rows().every(function () {
                var row = this.data();
                var found = false;

                // التكرار عبر كل الخلايا في الصف
                row.forEach(function (cell) {
                    if (cell.toString().toLowerCase().includes(keyword)) {
                        found = true; // إذا تم العثور على الكلمة في أي خلية
                    }
                });

                // إذا تم العثور على الكلمة في الصف، نظهره
                if (found) {
                    this.nodes().to$().show();// إظهار الصف
                    //recipts_ids_Data.push(row); // إضافة الصف إلى البيانات المفلترة
                    //recipts_ids_Data.push($(row[7]).find('.FirstLineP').text().replace(/,/g, '').trim()); // إضافة الصف إلى البيانات المفلترة
                    ////var recipt_id = $(this.node()).find('td').eq(7).find('.FirstLineP').text().trim();
                    ////var row_serial = $(this.node()).find('td').eq(8).find('.filter-number-td > div').text().trim();
                    ////recipts_ids_Data.push(recipt_id);
                    ////recipts_serials_Data.push(row_serial);
                    //console.log($(this.node()).find('td').eq(7).find('.FirstLineP').text().trim());
                    //console.log($(this.node()).find('td').eq(8).find('.filter-number-td > div').text().trim());
                            
                    // جمع القيم من العمود المحدد (مثلاً العمود الثاني)
                    var columnValue3 = parseFloat($(row[3]).text().replace(/,/g, '').trim()); // تغيير الفهرس 1 إلى رقم العمود الذي تريد جمعه
                    //console.log(columnValue);
                    //console.log(row[3]);
                    if (!isNaN(columnValue3)) {
                        totalSum_Credits += columnValue3; // إضافة القيمة إلى المجموع
                    }
                    // جمع القيم من العمود المحدد (مثلاً العمود الثاني)
                    var columnValue2 = parseFloat($(row[2]).text().replace(/,/g, '').trim()); // تغيير الفهرس 1 إلى رقم العمود الذي تريد جمعه
                    //console.log(columnValue);
                    //console.log(row[3]);
                    if (!isNaN(columnValue2)) {
                        totalSum_Debits += columnValue2; // إضافة القيمة إلى المجموع
                    }
                }
            });


            // استخدام toLocaleString لتنسيق الرقم وإضافة الفواصل
            var formattedNumber_Sum_Credits = totalSum_Credits.toLocaleString('en-US', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
            // استخدام toLocaleString لتنسيق الرقم وإضافة الفواصل
            var formattedNumber_Sum_Debits = totalSum_Debits.toLocaleString('en-US', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });

            //console.log(recipts_ids_Data);
            //console.log(recipts_serials_Data);
            console.log({ formattedNumber_Sum_Credits, formattedNumber_Sum_Debits });
            // عرض المجموع في مكان معين (على سبيل المثال في div أو span)
            //$('#Sum_ContractsValue').text('مجموع العمود: ' + formattedNumber_Sum_Credits); // N2  546,767.77
            //$('#Sum_ExpensesValue').text('مجموع العمود: ' + formattedNumber_Sum_Debits); // N2  546,767.77
            $('#p_credit').text(formattedNumber_Sum_Credits); // N2  546,767.77
            $('#p_debit').text(formattedNumber_Sum_Debits); // N2  546,767.77

            $("#min-loader").toggleClass("d-none", true); // اخفاء loader بعد انتهاء تحميل الصفحة
            //$("select[name='Table_length']").prepend("<option value='10000' id='A10000'>10000</option>");
        }


        // يمكن إضافة وظيفة البحث تلقائيًا عند كتابة النص
        $('#search2').on('keyup', function () {
            searchRows();
        });

    </script>
    <script>
        //get DailyReport By Status function
        function GetContractsByStatusFitler(status,start, end) {
            $.ajax({
                type: "GET",
                data: {
                    status: status, start: start, end: end
                },
                url: "@Url.Action("GetContractsByStatus", "DailyReport", new { Area = "CAS" })",
                success: function (response) {
                    $(".dataTable22").html(response);
                    console.log(response);
                    //$('#Table').DataTable();
                    var credit1=$("#in_credit").val();
                    var debit1=$("#in_debit").val();
                    var balance1 = $("#in_balance").val();
                    var avilableBalance1 = $("#in_avilableBalance").val();
                    var reservedBalance1 = $("#in_reservedBalance").val();
                    $("#p_credit").text(credit1);
                    $("#p_debit").text(debit1);
                    $("#p_balance").text(balance1);
                    $("#p_avilableBalance").text(avilableBalance1);
                    $("#p_reservedBalance").text(reservedBalance1);
                    $("#min-loader").toggleClass("d-none", true);

                },
            })
        }


        $("input[name='customRadio']").on("click", function () {
            const status = $(this).val();
            const start = $("#start_date").val(); // الحصول على قيمة البداية
            const end = $("#end_date").val(); // الحصول على قيمة النهاية

            //const start1 = $("#start_date").val(); // الحصول على قيمة البداية
            //var dateParts = start1.split("/"); // تقسيم التاريخ إلى أجزاء
            //var formattedDate1 = dateParts[2] + "-" + dateParts[1] + "-" + dateParts[0]; // تحويله إلى yyyy-MM-dd
            //var start = formattedDate1;// الحصول على قيمة النهاية
            //const end2 = $("#end_date").val(); // الحصول على قيمة البداية
            //var dateParts = end2.split("/"); // تقسيم التاريخ إلى أجزاء
            //var formattedDate2 = dateParts[2] + "-" + dateParts[1] + "-" + dateParts[0]; // تحويله إلى yyyy-MM-dd
            //var end = formattedDate2;// الحصول على قيمة النهاية

            $("#min-loader").removeClass("d-none");
            $("#search2").val("");
            GetContractsByStatusFitler(status, start, end);
        });

        // عند كتابة أي شيء في حقل البحث، تحديث الفلتر
        $("#btn_view").on("click", function () {
            const status = $("input[name='customRadio']:checked").val(); // الحصول على القيمة المحددة من الراديو
            const start = $("#start_date").val(); // الحصول على قيمة البداية
            const end = $("#end_date").val(); // الحصول على قيمة النهاية

            //const start1 = $("#start_date").val(); // الحصول على قيمة البداية
            //var dateParts = start1.split("/"); // تقسيم التاريخ إلى أجزاء
            //var formattedDate1 = dateParts[2] + "-" + dateParts[1] + "-" + dateParts[0]; // تحويله إلى yyyy-MM-dd
            //var start = formattedDate1;// الحصول على قيمة النهاية
            //const end2 = $("#end_date").val(); // الحصول على قيمة البداية
            //var dateParts = end2.split("/"); // تقسيم التاريخ إلى أجزاء
            //var formattedDate2 = dateParts[2] + "-" + dateParts[1] + "-" + dateParts[0]; // تحويله إلى yyyy-MM-dd
            //var end = formattedDate2;// الحصول على قيمة النهاية

            $("#min-loader").removeClass("d-none");
            $("#search2").val("");
            GetContractsByStatusFitler(status,start, end);
        });
    </script>

    <script>

        // دالة للبحث عن كلمة في جميع الصفوف
        function retrive_serials_ids_From_Datatable() {
            $("#min-loader").removeClass("d-none");// اظهار loader تحميل

            var table4 = $('#Table').DataTable();
            end_init_ShowDatatable();
            var keyword2 = $('#search2').val().toLowerCase(); // الكلمة المدخلة للبحث (تحويلها إلى حروف صغيرة)

            var recipts_ids_Data = []; // مصفوفة لتخزين البيانات المعروضة فقط
            var recipts_serials_Data = []; // مصفوفة لتخزين البيانات المعروضة فقط
            var totalSum_Debits2 = 0; // المتغير لحفظ مجموع القيم
            var totalSum_Credits2 = 0; // المتغير لحفظ مجموع القيم

            // إخفاء كل الصفوف أولاً
            table4.rows().every(function () {
                this.nodes().to$().hide(); // إخفاء الصف
            });

            // التكرار عبر كل الصفوف
            table4.rows().every(function () {
                var row1 = this.data();
                var found2 = false;

                // التكرار عبر كل الخلايا في الصف
                row1.forEach(function (cell) {
                    if (cell.toString().toLowerCase().includes(keyword2)) {
                        found2 = true; // إذا تم العثور على الكلمة في أي خلية
                    }
                });

                // إذا تم العثور على الكلمة في الصف، نظهره
                if (found2) {
                    this.nodes().to$().show();// إظهار الصف
                    //recipts_ids_Data.push(row1); // إضافة الصف إلى البيانات المفلترة
                    //recipts_ids_Data.push($(row1[7]).find('.FirstLineP').text().replace(/,/g, '').trim()); // إضافة الصف إلى البيانات المفلترة
                    var recipt_id = $(this.node()).find('td').eq(7).find('.FirstLineP').text().trim();
                    var row_serial = $(this.node()).find('td').eq(8).find('.filter-number-td > div').text().trim();
                    recipts_ids_Data.push(recipt_id);
                    recipts_serials_Data.push(row_serial);
                    //console.log($(this.node()).find('td').eq(7).find('.FirstLineP').text().trim());
                    //console.log($(this.node()).find('td').eq(8).find('.filter-number-td > div').text().trim());

                    // جمع القيم من العمود المحدد (مثلاً العمود الثاني)
                    var columnValue33 = parseFloat($(row1[3]).text().replace(/,/g, '').trim()); // تغيير الفهرس 1 إلى رقم العمود الذي تريد جمعه
                    //console.log(columnValue);
                    //console.log(row[3]);
                    if (!isNaN(columnValue33)) {
                        totalSum_Credits2 += columnValue33; // إضافة القيمة إلى المجموع
                    }
                    // جمع القيم من العمود المحدد (مثلاً العمود الثاني)
                    var columnValue22 = parseFloat($(row1[2]).text().replace(/,/g, '').trim()); // تغيير الفهرس 1 إلى رقم العمود الذي تريد جمعه
                    //console.log(columnValue);
                    //console.log(row[3]);
                    if (!isNaN(columnValue22)) {
                        totalSum_Debits2 += columnValue22; // إضافة القيمة إلى المجموع
                    }
                }
            });


            // استخدام toLocaleString لتنسيق الرقم وإضافة الفواصل
            var formattedNumber_Sum_Credits2 = totalSum_Credits2.toLocaleString('en-US', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
            // استخدام toLocaleString لتنسيق الرقم وإضافة الفواصل
            var formattedNumber_Sum_Debits2 = totalSum_Debits2.toLocaleString('en-US', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });

            console.log(recipts_ids_Data);
            console.log(recipts_serials_Data);
            console.log({ formattedNumber_Sum_Credits2, formattedNumber_Sum_Debits2 });
            // عرض المجموع في مكان معين (على سبيل المثال في div أو span)
            //$('#Sum_ContractsValue').text('مجموع العمود: ' + formattedNumber_Sum_Credits); // N2  546,767.77
            //$('#Sum_ExpensesValue').text('مجموع العمود: ' + formattedNumber_Sum_Debits); // N2  546,767.77
            $('#p_credit').text(formattedNumber_Sum_Credits2); // N2  546,767.77
            $('#p_debit').text(formattedNumber_Sum_Debits2); // N2  546,767.77

            $("#min-loader").toggleClass("d-none", true); // اخفاء loader بعد انتهاء تحميل الصفحة
            //$("select[name='Table_length']").prepend("<option value='10000' id='A10000'>10000</option>");

            CreateExcelFile(recipts_ids_Data, recipts_serials_Data, formattedNumber_Sum_Debits2, formattedNumber_Sum_Credits2);
        }
    </script>
 
    <script>
        //post Create DailyReport Excel File function
        function CreateExcelFile(recipts_ids_Data, recipts_serials_Data, Debits, Credits) {
            const start = $("#start_date").val(); // الحصول على قيمة البداية
            const end = $("#end_date").val(); // الحصول على قيمة النهاية
            $.ajax({
                type: "POST",
                data: { list_recipt_ids: recipts_ids_Data, list_serials: recipts_serials_Data, debits: Debits, credits: Credits, start: start, end: end },  // إرسال البيانات المفلترة
                url: "@Url.Action("createExcel_saveAs_Receipt_Action", "DailyReport", new { Area = "CAS" })",

                success: function (response) {
                    console.log(response);
                    //$('#Table').DataTable();
                    var credit1 = $("#in_credit").val();
                    var debit1 = $("#in_debit").val();
                    var balance1 = $("#in_balance").val();
                    var avilableBalance1 = $("#in_avilableBalance").val();
                    var reservedBalance1 = $("#in_reservedBalance").val();
                    $("#p_credit").text(credit1);
                    $("#p_debit").text(debit1);
                    $("#p_balance").text(balance1);
                    $("#p_avilableBalance").text(avilableBalance1);
                    $("#p_reservedBalance").text(reservedBalance1);
                    $("#min-loader").toggleClass("d-none", true);

                },
                error: function (xhr, status, error) {
                    console.error('Error sending filtered data');
                }
            });
        }
    </script>

}
