@using Bnan.Core.Extensions;
@using Bnan.Ui.ViewModels.CAS.Employees
@model EmployeesWithAuthrizationVM

@inject IViewLocalizer localizer
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<style>
    .inactive-branch {
        color: red;
        font-weight: bold;
    }
</style>

<div class="col my-2 d-flex align-items-center justify-content-center">
    <div class="container NewUpdate-container">
        <form asp-area="CAS" asp-controller="Employees" asp-action="Edit" class="needs-validation" novalidate id="myForm">
            <input id="CrMasUserInformationStatus" asp-for="CrMasUserInformationStatus" hidden />
            <input id="CrMasUserInformationCode" asp-for="CrMasUserInformationCode" hidden />
            <div class="row">
                <div class="row justify-content-center">
                    <div class="col-lg-9">
                        <div class="row g-3 my-2">
                            <div class="col-md-6">
                                <h3> @localizer["Edit_User_PageTitle"] </h3>
                            </div>
                            <div class="col-md-6 save-col">
                                <button type="button" class="custom-img-btn" id="ChangePassword" onclick="ResetPassword()">
                                    <img src="~/CasSys/images/Frame (5).svg" />
                                </button>
                                <button type="submit" class="custom-img-btn" id="SaveEdit">
                                    <img src="~/CasSys/images/save.svg" />
                                </button>
                                <button type="button" class="custom-img-btn" id="HoldBtn" data-bs-toggle="modal" data-bs-target="#Stop-Modal">
                                    <img id="StopModalIcon" src="~/CasSys/images/stop.svg" />
                                </button>
                                <button type="button" class="custom-img-btn" id="DeleteBtn" data-bs-toggle="modal" data-bs-target="#Delete-Modal">
                                    <img id="modalIcon" src="~/CasSys/images/delete (2).svg" />
                                </button>
                                <button type="button" class="custom-img-btn">
                                    <a href="/CAS/Employees/Index">
                                        <img class="Chevron" src="~/CasSys/images/Chevron_Left.svg" />
                                    </a>
                                </button>
                            </div>
                        </div>
                        <main class="mt-4 g-3">
                            <h5 class="subtitle">@(requestCulture?.RequestCulture.UICulture.Name == "en-US" ? Model.CrMasUserInformationEnName : Model.CrMasUserInformationArName)</h5>

                            <div class="accordion inputs-accordion">
                                <div class=" inputs-accordion-item">
                                    <div class=" inputs-accordion-item-header">
                                        <span class="accordion-item-header-title">
                                            @localizer["PersonalInforamtion"]
                                        </span>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25"
                                             viewBox="0 0 24 24" fill="none" stroke="#666666"
                                             stroke-width="3" stroke-linecap="round"
                                             stroke-linejoin="round"
                                             class="lucide lucide-chevron-down accordion-item-header-icon">
                                            <path d="m6 9 6 6 6-6" />
                                        </svg>
                                    </div>
                                    <div class="accordion-item-description-wrapper">

                                        <div class="accordion-item-description">
                                            <hr class="accordion-items-hr">

                                            <div class="container-fluid">

                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label for="JobTitle-ar" class="form-label">
                                                            @localizer["EmployementNameAr"]
                                                            <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                        </label>
                                                        <input type="text" id="CrMasUserInformationTasksArName" asp-for="CrMasUserInformationTasksArName" class="form-control inputs arabic-input" maxlength="40" oninput="this.value=this.value.replace(/[^\u0600-\u06FF\ufb50-\ufdff\ufe70-\ufeff\s]/g, '')" required>
                                                        <div class="invaild">
                                                            <div class="invalid-feedback">
                                                                <span asp-validation-for="@Model.CrMasUserInformationTasksArName" class="text-danger"></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label for="CrMasUserInformationTasksEnName" class="form-label">
                                                            @localizer["EmployementNameEn"]
                                                            <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                        </label>
                                                        <input type="text" id="CrMasUserInformationTasksEnName" asp-for="CrMasUserInformationTasksEnName" class="form-control inputs english-input" maxlength="40" oninput="this.value = this.value.replace(/[^a-zA-Z ]/g, '')" required>
                                                        <div class="invaild">
                                                            <div class="invalid-feedback">
                                                                <span asp-validation-for="@Model.CrMasUserInformationTasksEnName" class="text-danger"></span>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="row">
                                                            <div class="col-auto">
                                                                <p> @localizer["MasEmployeeNo"] </p>
                                                            </div>
                                                            <div class=" col-md-auto Saved-data">
                                                                <p>@Model.CrMasUserInformationCode</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <div class="row">
                                                            <div class="col-auto">
                                                                <p> @localizer["UserID"] </p>
                                                            </div>
                                                            <div class=" col-md-auto Saved-data">
                                                                <p>@Model.CrMasUserInformationId</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label for="CrMasUserInformationMobileNo" class="form-label">
                                                            @localizer["MobilePhone"]
                                                             <i class="fa-solid fa-star-of-life RequirdStar"></i> 
                                                        </label>
                                                        <div class="input-group has-validation">
                                                            <input type="tel" class="form-control inputs tel-input" id="CrMasUserInformationMobileNo" asp-for="CrMasUserInformationMobileNo" oninput="this.value=this.value.replace(/[^0-9]/g,'')" maxlength="10" required>
                                                            <select class="input-group-text select-style counterCode" asp-for="CrMasUserInformationCallingKey">
                                                                @foreach (var callingKey in (List<SelectListItem>)ViewData["CallingKeys"])
                                                                {
                                                                    <option value="@callingKey.Text.Trim()">@callingKey.Text</option>
                                                                }
                                                            </select>
                                                            <div class="invaild">
                                                                <div class="invalid-feedback">
                                                                    <span asp-validation-for="@Model.CrMasUserInformationMobileNo" class="text-danger"></span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label for="CrMasUserInformationEmail" class="form-label">
                                                            @localizer["Email"]
                                                        </label>
                                                        <input type="email" id="CrMasUserInformationEmail" asp-for="CrMasUserInformationEmail" class="form-control inputs english-input" maxlength="100">
                                                        <div class="invaild">
                                                            <div class="invalid-feedback">
                                                                <span asp-validation-for="@Model.CrMasUserInformationEmail" class="text-danger"></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row align-items-center ">

                                                    <div class="col-md-12">
                                                        <label for="CrMasUserInformationReasons">@localizer["Reason_s"]</label>
                                                        <textarea class="form-control textarea-inputs" rows="1" maxlength="100" asp-for="CrMasUserInformationReasons" type="text"></textarea>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=" inputs-accordion-item">
                                    <div class=" inputs-accordion-item-header">
                                        <span class="accordion-item-header-title">
                                            @localizer["AuthCustody"]
                                        </span>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25"
                                             viewBox="0 0 24 24" fill="none" stroke="#666666"
                                             stroke-width="3" stroke-linecap="round"
                                             stroke-linejoin="round"
                                             class="lucide lucide-chevron-down accordion-item-header-icon">
                                            <path d="m6 9 6 6 6-6" />
                                        </svg>
                                    </div>
                                     <div class="accordion-item-description-wrapper">
                                        <div class="accordion-item-description">
                                            <hr class="accordion-items-hr">
                                            <div class="container-fluid ">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label for="CrMasUserInformationCreditLimit" class="form-label">@localizer["CreditLimitCAS"]<i class="fa-solid fa-star-of-life RequirdStar"></i></label>
                                                        <input type="text" id="CrMasUserInformationCreditLimit" class="form-control inputs" asp-for="CrMasUserInformationCreditLimit" maxlength="10" min="0" oninput="this.value=this.value.replace(/[^0-9]/g,'')" required>
                                                        <div class="invaild">
                                                            <div class="invalid-feedback zero-feedback">
                                                                <span asp-validation-for="@Model.CrMasUserInformationCreditLimit" class="text-danger"></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label for="CrMasUserInformationCreditDaysLimit" class="form-label w-100">@localizer["DailyLimit"]</label>
                                                        <div class="number-input-container  ">
                                                            <div class="col">
                                                                <input type="text" min="5" max="30" class="  alert-input" asp-for="CrMasUserInformationCreditDaysLimit" oninput="this.value=this.value.replace(/[^0-9]/g,'')" />
                                                            </div>
                                                            <div class="col d-flex flex-column-reverse">
                                                                <button type="button" class="deincrement">
                                                                </button>
                                                                <button type="button" class="increment"></button>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=" inputs-accordion-item">
                                    <div class=" inputs-accordion-item-header">
                                        <span class="accordion-item-header-title">
                                            @localizer["ValiditySystemCAS"]
                                        </span>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25"
                                             viewBox="0 0 24 24" fill="none" stroke="#666666"
                                             stroke-width="3" stroke-linecap="round"
                                             stroke-linejoin="round"
                                             class="lucide lucide-chevron-down accordion-item-header-icon">
                                            <path d="m6 9 6 6 6-6" />
                                        </svg>
                                    </div>
                                    <div class="accordion-item-description-wrapper">

                                        <div class="accordion-item-description">
                                            <hr class="accordion-items-hr">

                                            <div class="container-fluid data-scroll-container" style="height: 20vh;">
                                                <div class="row">
                                                    <div class="d-flex gap-3 align-items-center">
                                                        <!-- حقل checkbox للصلاحية Admin -->
                                                        <input class="form-check-input checkbox" type="checkbox" id="CrMasUserInformationAuthorizationAdmin" name="CrMasUserInformationAuthorizationAdmin"
                                                               value="true" @((bool)Model.CrMasUserInformationAuthorizationAdmin ? "checked='checked'" : "")>
                                                        <label class="form-check-label" for="CrMasUserInformationAuthorizationAdmin">
                                                            @localizer["ValidityCAS"]
                                                        </label>
                                                    </div>

                                                </div>
                                                <div class="row my-3">
                                                    <div class="d-flex gap-3 align-items-center">
                                                        <!-- حقل checkbox للصلاحية Owner -->
                                                        <input class="form-check-input checkbox" type="checkbox" id="CrMasUserInformationAuthorizationOwner" name="CrMasUserInformationAuthorizationOwner"
                                                               value="true" @((bool)Model.CrMasUserInformationAuthorizationOwner ? "checked='checked'" : "")>
                                                        <label class="form-check-label" for="CrMasUserInformationAuthorizationOwner">
                                                            @localizer["ValidityOWN"]
                                                        </label>
                                                    </div>
                                                </div>
                                                <div class="row ">
                                                    <div class="col-md-auto ">
                                                        <div class="d-flex gap-3 align-items-center">
                                                            <!-- حقل checkbox للصلاحية Branch -->
                                                            <input class="form-check-input checkbox" type="checkbox" id="CrMasUserInformationAuthorizationBranch" name="CrMasUserInformationAuthorizationBranch"
                                                                   value="true" @((bool)Model.CrMasUserInformationAuthorizationBranch ? "checked" : "")>
                                                            <label class="form-check-label main-checkbox" for="CrMasUserInformationAuthorizationBranch">
                                                                @localizer["ValidityBS"]
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" id="hidden-Branches" style="display: none;">
                                                        @if (Model.BranchesAuthrization != null && Model.BranchesAuthrization.Any())
                                                        {
                                                            for (int i = 0; i < Model.BranchesAuthrization.Count; i++)
                                                            {
                                                                var branch = Model.BranchesAuthrization[i];
                                                                var isDisabled = branch.IfCanChangeAuthrization; // لا يمكنه تغيير الصلاحية
                                                                var isInactive = branch.BranchActiveOrHold;     // الفرع موقوف
                                                                <div class="d-flex gap-3 align-items-center">
                                                                    <!-- Checkbox الخاص بالفرع -->
                                                                    <input class="form-check-input checkbox"
                                                                           type="checkbox"
                                                                           id="BranchesAuthrization[@i].Authrization"
                                                                           name="BranchesAuthrization[@i].Authrization"
                                                                           value="true"
                                                                    @(branch.Authrization ? "checked" : "")
                                                                    @(!branch.IfCanChangeAuthrization ? "disabled" : "") />

                                                                    <!-- Hidden inputs لنقل بيانات الفرع -->
                                                                    <input type="hidden" name="BranchesAuthrization[@i].Code" value="@branch.Code" />
                                                                    <input type="hidden" name="BranchesAuthrization[@i].Name" value="@branch.Name" />

                                                                    <!-- Label الخاص بالفرع -->
                                                                    <label class="form-check-label @(!isInactive ? "text-danger": "")"
                                                                           for="BranchesAuthrization[@i].Authrization"
                                                                           title="@(!isDisabled ? localizer["CantChangeAuthForBranch"] : (!isInactive ? localizer["BranchHold"] : ""))">
                                                                        @branch.Name
                                                                    </label>
                                                                </div>
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </main>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<!-- delete modal -->
<div class="modal fade" id="Delete-Modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="Delete-ModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="border: 1px solid var(--main-color);">
            <div class="content" id="modalContent">
            </div>
            <!-- Hidden spinner  -->
            <div class="modal-body text-center" id="spinner" style="display: none;">
                <span class="State-Modal-loader"></span>
            </div>
        </div>
    </div>
</div>
<!-- Stopp  modal -->
<div class="modal fade" id="Stop-Modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="Stop-ModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="border: 1px solid var(--main-color);">
            <div class=" content" id="Stop-modal-Content">
            </div>
            <!-- Hidden spinner  -->
            <div class="modal-body text-center" id="spinner2" style="display: none;">
                <span class="State-Modal-loader"></span>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/toastr.js"></script>
    <script>
        // To Handle Background
        $("#wrapper").addClass("Branches-wrapper");
        var statusInput = $("#CrMasUserInformationStatus");
    </script>
    <script>
        function updateUserStatus(status) {
            var code = "@Model.CrMasUserInformationCode";
            return new Promise((resolve, reject) => {
                $.ajax({
                    type: "POST",
                    url: "/CAS/Employees/EditStatus",
                    data: { status: status, code: code },
                    success: function (result) {
                        toastr.options = { "positionClass": "@localizer["toastPostion"]" };

                        if (result == "true") {
                            //@*toastr.success("@localizer["ToastSave"]");*@
                            resolve(true);
                        } else if (result == "false_auth") {
                            toastr.error("@localizer["AuthEmplpoyee_No_auth"]");
                            resolve(false);
                        } else if (result == "udelete") {
                            toastr.error("@localizer["SureTo_Cannot_delete"]");
                            resolve(false);
                        } else {
                            toastr.error("@localizer["ToastFailed"]");
                            resolve(false);
                        }
                    },
                    error: function () {
                        toastr.error("@localizer["ToastFailed"]");
                        resolve(false);
                    }
                });
            });
        }
    </script>
    <script>
        let isDeleted = false;
        let isStoped = false
        if (statusInput.val() == '@Status.Hold') {
            isDeleted = false;
            isStoped = true
        }
        else if (statusInput.val() == '@Status.Deleted') {
            isDeleted = true;
            isStoped = false
        }

        window.onload = () => {
            DeleteState(isDeleted);
            StopState(isStoped);
        };

        function DeleteState(deleted) {
            isDeleted = deleted;

            document.getElementById("modalContent").style.display = "block";
            document.getElementById("modalIcon").src = isDeleted
                ? "/CasSys/images/Property 1=recycle.svg"
                : "/CasSys/images/delete (2).svg";

            document.getElementById("modalContent").innerHTML = isDeleted
                ? `
                                                                                    <div class="modal-header border-0">
                                                                                      <h1 class="modal-title fs-4 m-auto d-flex align-items-start gap-2" id="Delete-ModalLabel">
                                                                                        <img src="/CasSys/images/Green-recycle.svg" /> @localizer["SureToRetriveDelete"]
                                                                                      </h1>
                                                                                    </div>
                                                                                    <div class="modal-body">
                                                                                                <p>@localizer["ModalFirstMessage_EmployeesCAS_UnDelete"]</p>
                                                                                                <p>@localizer["ModalSecondMessage_EmployeesCAS_UnDelete"]</p>
                                                                                    </div>
                                                                                    <div class="modal-footer border-0">
                                                                                      <div class="container">
                                                                                        <div class="row">
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-modal-Save" id="RetriveBtn" onclick="DeleteLoad()">@localizer["Okay"]</button>
                                                                                          </div>
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-Cancel" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                                                                                          </div>
                                                                                        </div>
                                                                                      </div>
                                                                                    </div>`
                : `
                                                                                    <div class="modal-header border-0">
                                                                                      <h1 class="modal-title fs-4 m-auto d-flex align-items-start gap-2" id="Delete-ModalLabel">
                                                                                        <img src="/CasSys/images/delete (2).svg" /> @localizer["SureTodelete"]
                                                                                      </h1>
                                                                                    </div>
                                                                                    <div class="modal-body">
                                                                                                                <p>@localizer["ModalFirstMessage_EmployeesCAS_Delete"]</p>
                                                                                                                <p>@localizer["ModalSecondMessage_EmployeesCAS_Delete"]</p>
                                                                                    </div>
                                                                                    <div class="modal-footer border-0">
                                                                                      <div class="container">
                                                                                        <div class="row">
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-modal-Save" id="DeleteBtn" onclick="DeleteLoad()">@localizer["Okay"]</button>
                                                                                          </div>
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-Cancel" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                                                                                          </div>
                                                                                        </div>
                                                                                      </div>
                                                                                    </div>`;
        }
        function DeleteLoad() {
            const modalContent = document.getElementById("modalContent");
            const spinner = document.getElementById("spinner");
            const deleteModal = document.getElementById("Delete-Modal");
            const modalIcon = document.getElementById("modalIcon");

            modalContent.style.display = "none";
            spinner.style.display = "flex";

            setTimeout(async () => {
                spinner.style.display = "none";
                const modal = bootstrap.Modal.getInstance(deleteModal);
                modal.hide();

                const newStatus = isDeleted ? '@Status.UnDeleted' : '@Status.Deleted';
                const success = await updateUserStatus(newStatus);
                if (success) {
                    statusInput.val(isDeleted ? '@Status.Active' : '@Status.Deleted');
                    isDeleted = !isDeleted;

                    modalIcon.src = isDeleted
                        ? "/CasSys/images/Property 1=recycle.svg"
                        : "/CasSys/images/delete (2).svg";

                    DeleteState(isDeleted);
                    setTimeout(function () {
                        location.href = '@Url.Action("SuccessToast", "Employees")';
                    }, 500); // التأخير لمدة .5 ثوانٍ
                }
                else {
                    modalIcon.src = isDeleted
                        ? "/CasSys/images/Property 1=recycle.svg"
                        : "/CasSys/images/delete (2).svg";

                    DeleteState(isDeleted);
                }
            }, 500);
        }

        function StopState(Stoped) {
            isStoped = Stoped;

            document.getElementById("Stop-modal-Content").style.display = "block";
            document.getElementById("StopModalIcon").src = isStoped
                ? "/CasSys/images/Property 1=active.svg"
                : "/CasSys/images/stop.svg";

            document.getElementById("Stop-modal-Content").innerHTML = isStoped
                ? `
                                                                                    <div class="modal-header border-0">
                                                                                      <h1 class="modal-title fs-4 m-auto d-flex align-items-start gap-2" id="Delete-ModalLabel">
                                                                                        <img src="/CasSys/images/GreenStop.svg" /> @localizer["SureToRetriveHold"]
                                                                                      </h1>
                                                                                    </div>
                                                                                    <div class="modal-body">
                                                                                        <p>@localizer["ModalFirstMessage_EmployeesCAS_UnHold"]</p>
                                                                                        <p>@localizer["ModalSecondMessage_EmployeesCAS_UnHold"]</p>
                                                                                    </div>
                                                                                    <div class="modal-footer border-0">
                                                                                      <div class="container">
                                                                                        <div class="row">
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-modal-Save" id="RetriveBtn" onclick="StopLoad()">@localizer["Okay"]</button>
                                                                                          </div>
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-Cancel" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                                                                                          </div>
                                                                                        </div>
                                                                                      </div>
                                                                                    </div>`
                : `
                                                                                    <div class="modal-header border-0">
                                                                                      <h1 class="modal-title fs-4 m-auto d-flex align-items-start gap-2" id="Delete-ModalLabel">
                                                                                        <img src="/CasSys/images/RedStop.svg" /> @localizer["SureToHold"]
                                                                                      </h1>
                                                                                    </div>
                                                                                    <div class="modal-body">
                                                                                        <p>@localizer["ModalFirstMessage_EmployeesCAS_Hold"]</p>
                                                                                        <p>@localizer["ModalSecondMessage_EmployeesCAS_Hold"]</p>
                                                                                    </div>
                                                                                    <div class="modal-footer border-0">
                                                                                      <div class="container">
                                                                                        <div class="row">
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-modal-Save" id="HoldBtn" onclick="StopLoad()">@localizer["Okay"]</button>
                                                                                          </div>
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-Cancel" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                                                                                          </div>
                                                                                        </div>
                                                                                      </div>
                                                                                    </div>`;
        }
        function StopLoad() {
            const stopModalContent = document.getElementById("Stop-modal-Content");
            const spinner = document.getElementById("spinner2");
            const modalElement = document.getElementById("Stop-Modal");
            const stopModalIcon = document.getElementById("StopModalIcon");

            stopModalContent.style.display = "none";
            spinner.style.display = "flex";

            setTimeout(async () => {
                spinner.style.display = "none";
                const modal = bootstrap.Modal.getInstance(modalElement);
                modal.hide();

                const newStatus = isStoped ? '@Status.UnHold' : '@Status.Hold';
                const success = await updateUserStatus(newStatus);
                if (success) {
                    statusInput.val(isStoped ? '@Status.Active' : '@Status.Hold');
                    isStoped = !isStoped;

                    stopModalIcon.src = isStoped
                        ? "/CasSys/images/Property 1=active.svg"
                        : "/CasSys/images/stop.svg";

                    StopState(isStoped);
                    setTimeout(function () {
                        location.href = '@Url.Action("SuccessToast", "Employees")';
                    }, 500); // التأخير لمدة .5 ثوانٍ
                }
            }, 500);
        }

    </script>
    <script>
        function ResetPassword() {
            var code = document.getElementById("CrMasUserInformationCode").value;
            $.ajax({
                type: "POST",
                url: "/MAS/UsersForCompanies/ResetPassword",
                data: { code: code },
                success: function (result) {
                    if (result) {
                        window.location.href = "/MAS/UsersForCompanies/SuccessResetPassword";
                    }
                    else {
                        window.location.href = "/MAS/UsersForCompanies/Failed";
                    }

                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

    </script>
    <script>
        // السماح فقط بالأحرف الإنجليزية والأرقام
        function isEnglishAndNumbers(event) {
            const char = String.fromCharCode(event.which);
            const regex = /^[A-Za-z0-9]+$/; // يسمح فقط بالأحرف الإنجليزية والأرقام
            return regex.test(char);
        }

        // إزالة أي أحرف غير صالحة أثناء الإدخال
        function removeInvalidChars(input) {
            input.value = input.value.replace(/[^A-Za-z0-9]/g, '');
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const BranchesAuthority = document.getElementById('CrMasUserInformationAuthorizationBranch');
            const hiddenBranches = document.getElementById('hidden-Branches');
            // التحقق عند تحميل الصفحة إذا كان الـ checkbox محددًا
            const isCheckedOnLoad = BranchesAuthority.checked;
            hiddenBranches.style.display = isCheckedOnLoad ? 'block' : 'none';
            BranchesAuthority.addEventListener('change', function () {
                const isChecked = BranchesAuthority.checked;
                hiddenBranches.style.display = isChecked ? 'block' : 'none';
            });
        });
    </script>
    <script>
        let deincrement = document.querySelector(".deincrement");
        let increment = document.querySelector(".increment");
        let number = document.querySelector(".alert-input");

        let step = 5;
        let max = 30;
        let min = 5;

        number.addEventListener('blur', () => {
            let currentValue = parseInt(number.value);
            if (isNaN(currentValue)) {
                number.value = min;
            } else if (currentValue > max) {
                number.value = max;
            } else if (currentValue < min) {
                number.value = min;
            }
        });

        increment.addEventListener("click", () => {
            if (parseInt(number.value) + step >= max) {
                number.value = max;
                increment.style.backgroundImage = "url('/CasSys/images/up1.svg')";
                deincrement.style.backgroundImage = "url('/CasSys/images/down.svg')";
                return;
            }
            increment.style.backgroundImage = "url('/CasSys/images/up.svg')";
            deincrement.style.backgroundImage = "url('/CasSys/images/down.svg')";
            number.value = parseInt(number.value) + step;
        });

        deincrement.addEventListener("click", () => {
            if (parseInt(number.value) - step <= min) {
                number.value = min;
                deincrement.style.backgroundImage = "url('/CasSys/images/down1.svg')";
                increment.style.backgroundImage = "url('/CasSys/images/up.svg')";
                return;
            }
            deincrement.style.backgroundImage = "url('/CasSys/images/down.svg')";
            increment.style.backgroundImage = "url('/CasSys/images/up.svg')";
            number.value = parseInt(number.value) - step;
        });
    </script>
    <script>
        $(document).ready(function () {
            function Check_onChange_input(existName, dataField) {
                var lessorCode = $("#lessorCode").val();

                $.ajax({
                    type: "GET",
                    url: "/CAS/Employees/CheckChangedField",
                    data: { existName: existName, dataField: dataField, lessorCode: lessorCode },
                    success: function (result) {
                        console.log("feedback", result);
                        // Hide all previous error messages
                        $('.invalid-feedback').show();

                        // Show new error messages if they exist
                        if (result.errors && result.errors.length > 0) {
                            result.errors.forEach(function (error) {
                                // Use the ID from the error object to find the correct element
                                $(`#${error.field}-Error`).text(error.message).show();
                            });
                        } else {
                            // Hide the error message if no errors
                            $(`#${existName}-Error`).text("");
                        }
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            }

            $('#CrMasUserInformationCode').on('change', function () {
                var newValue = $(this).val();
                Check_onChange_input('CrMasUserInformationCode', newValue);
            });

            $('#CrMasUserInformationId').on('change', function () {
                var newValue = $(this).val();
                Check_onChange_input('CrMasUserInformationId', newValue);
            });

            $('#CrMasUserInformationArName').on('change', function () {
                var newValue = $(this).val();
                Check_onChange_input('CrMasUserInformationArName', newValue);
            });

            $('#CrMasUserInformationEnName').on('change', function () {
                var newValue = $(this).val();
                Check_onChange_input('CrMasUserInformationEnName', newValue);
            });


        });

    </script>
    <script>
        function ResetPassword() {
            var code = "@Model.CrMasUserInformationCode";
            $.ajax({
                type: "POST",
                url: "/CAS/Employees/ResetPassword",
                data: { code: code },
                success: function (result) {
                    if (result) {
                        window.location.href = "/CAS/Employees/SuccessToast";
                    }
                    else {
                        window.location.href = "/CAS/Employees/Failed";
                    }

                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

    </script>
}