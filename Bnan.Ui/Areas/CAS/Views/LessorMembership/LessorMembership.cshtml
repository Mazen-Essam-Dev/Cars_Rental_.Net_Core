@using Bnan.Core.Extensions;
@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> options
@model List<CrCasLessorMembership>

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";

}



<div class="col my-2 d-flex align-items-center justify-content-center">
    <div class="container  NewUpdate-container  ">
        <form asp-area="CAS" asp-controller="LessorMembership" asp-action="Edit" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
            <div class="row justify-content-center">
                <div class="col-lg-10">
                    <div class="row g-3 my-2">
                        <div class="col-md-6">
                            <h3>@localizer["Memberships"]</h3>
                        </div>
                        <div class="col-md-6 save-col">
                            <button type="submit" class="custom-img-btn">
                                <img src="~/CasSys/images/save.svg" />
                            </button>
                        </div>
                    </div>
                    <div class="row justify-content-center g-3">
                        <div class="col-lg-8">
                            <div class="row justify-content-center g-3">
                                @foreach (var item in Model)
                                {
                                    <div class="col-md-auto">
                                        <div class="Membership-card">
                                            <div class="container">
                                                <div class="row align-items-center">
                                                    <div class="col img-Membership-card">
                                                        <div class="card-radio">
                                                            <div class="form-check">
                                                                <input class="form-check-input membership-checkbox " type="checkbox"
                                                                       id="CrCasLessorMembershipConditionsActivate-@item.CrCasLessorMembershipConditions"
                                                                       name="CrCasLessorMembershipConditionsActivate-@item.CrCasLessorMembershipConditions"
                                                                       checked="@item.CrCasLessorMembershipConditionsActivate.GetValueOrDefault()">
                                                            </div>
                                                        </div>
                                                        @{
                                                            string imagePath = item.CrCasLessorMembershipConditions switch
                                                            {
                                                                "1600000001" => "vip card.svg",
                                                                "1600000002" => "Diamond card.svg",
                                                                "1600000003" => "Gold Card.svg",
                                                                "1600000004" => "Silver Card.svg",
                                                                "1600000005" => "Bronze Card.svg",
                                                                _ => "Frame.svg"
                                                            };
                                                        }
                                                        <img src="~/CasSys/images/membership/@imagePath" class="Membership-img">
                                                        <i class="fa-solid fa-chevron-left membership-chevron"></i>
                                                    </div>
                                                    <div class="col-md-8 Data-Membership-card" style="display: none;">
                                                        <!-- First Row - Amount Traded -->
                                                        <div class="row">
                                                            <div class="col-md-4">
                                                                @localizer["Amountstraded"]
                                                            </div>
                                                            <div class="col">
                                                                <input class="form-control Membership-input number-input"
                                                                       type="text" id="CrCasLessorMembershipConditionsAmount-@item.CrCasLessorMembershipConditions"
                                                                       name="CrCasLessorMembershipConditionsAmount-@item.CrCasLessorMembershipConditions"
                                                                       value="@item.CrCasLessorMembershipConditionsAmount.GetValueOrDefault().ToString("N2",CultureInfo.InvariantCulture)"
                                                                       onfocusout="calc('CrCasLessorMembershipConditionsAmount-@item.CrCasLessorMembershipConditions')"
                                                                       max="10" oninput="validateInput9Digit(this)">
                                                            </div>
                                                            <div class="col d-flex">
                                                                <div class="form-check form-check-inline">
                                                                    <input class="form-check-input" type="checkbox"
                                                                           id="AndCase1-@item.CrCasLessorMembershipConditions" value="1"
                                                                           name="Conditions1_@item.CrCasLessorMembershipConditions"
                                                                    @(item.CrCasLessorMembershipConditionsLink1 == "1" ? "checked" : "")
                                                                           onclick="handleCheckboxToggle('@item.CrCasLessorMembershipConditions', 1)">
                                                                    <label class="form-check-label" for="AndCase1-@item.CrCasLessorMembershipConditions">@localizer["And"]</label>
                                                                </div>
                                                                <div class="form-check form-check-inline">
                                                                    <input class="form-check-input" type="checkbox"
                                                                           id="OrCase1-@item.CrCasLessorMembershipConditions" value="2"
                                                                           name="Conditions1_@item.CrCasLessorMembershipConditions"
                                                                    @(item.CrCasLessorMembershipConditionsLink1 == "2" ? "checked" : "")
                                                                           onclick="handleCheckboxToggle('@item.CrCasLessorMembershipConditions', 1)">
                                                                    <label class="form-check-label" for="OrCase1-@item.CrCasLessorMembershipConditions">@localizer["Or"]</label>
                                                                </div>
                                                                <input type="hidden" id="HiddenCase1-@item.CrCasLessorMembershipConditions"
                                                                       name="HiddenCase1_@item.CrCasLessorMembershipConditions"
                                                                       value="@(item.CrCasLessorMembershipConditionsLink1 ?? "3")" />
                                                            </div>
                                                        </div>
                                                        <!-- Second Row - Kilo Traveled -->
                                                        <div class="row my-2">
                                                            <div class="col-md-4">
                                                                @localizer["Kilotraveled"]
                                                            </div>
                                                            <div class="col">
                                                                <input class="form-control Membership-input number-input"
                                                                       type="text" id="CrCasLessorMembershipConditionsKm-@item.CrCasLessorMembershipConditions"
                                                                       name="CrCasLessorMembershipConditionsKm-@item.CrCasLessorMembershipConditions"
                                                                       value="@item.CrCasLessorMembershipConditionsKm.GetValueOrDefault()"
                                                                       onfocusout="calc('CrCasLessorMembershipConditionsKm-@item.CrCasLessorMembershipConditions')"
                                                                       maxlength="7" oninput="this.value=this.value.replace(/[^0-9]/g,'')">
                                                            </div>
                                                            <div class="col d-flex">
                                                                <div class="form-check form-check-inline">
                                                                    <input class="form-check-input" type="checkbox"
                                                                           id="AndCase2-@item.CrCasLessorMembershipConditions"
                                                                           value="1"
                                                                           name="Conditions2_@item.CrCasLessorMembershipConditions"
                                                                    @(item.CrCasLessorMembershipConditionsLink2 == "1" ? "checked" : "")
                                                                           onclick="handleCheckboxToggle('@item.CrCasLessorMembershipConditions', 2)">
                                                                    <label class="form-check-label" for="AndCase2-@item.CrCasLessorMembershipConditions">@localizer["And"]</label>
                                                                </div>
                                                                <div class="form-check form-check-inline">
                                                                    <input class="form-check-input" type="checkbox"
                                                                           id="OrCase2-@item.CrCasLessorMembershipConditions"
                                                                           value="2"
                                                                           name="Conditions2_@item.CrCasLessorMembershipConditions"
                                                                    @(item.CrCasLessorMembershipConditionsLink2 == "2" ? "checked" : "")
                                                                           onclick="handleCheckboxToggle('@item.CrCasLessorMembershipConditions', 2)">
                                                                    <label class="form-check-label" for="OrCase2-@item.CrCasLessorMembershipConditions">@localizer["Or"]</label>
                                                                </div>
                                                                <input type="hidden" id="HiddenCase2-@item.CrCasLessorMembershipConditions"
                                                                       name="HiddenCase2_@item.CrCasLessorMembershipConditions"
                                                                       value="@(item.CrCasLessorMembershipConditionsLink2 ?? "3")" />
                                                            </div>
                                                        </div>
                                                        <!-- Third Row - Contracts Count -->
                                                        <div class="row my-2">
                                                            <div class="col-md-4">
                                                                @localizer["ContractsCount"]
                                                            </div>
                                                            <div class="col-6 col-md-4">
                                                                <input class="form-control Membership-input number-input" type="text"
                                                                       id="CrCasLessorMembershipConditionsContractNo-@item.CrCasLessorMembershipConditions"
                                                                       name="CrCasLessorMembershipConditionsContractNo-@item.CrCasLessorMembershipConditions"
                                                                       value="@item.CrCasLessorMembershipConditionsContractNo.GetValueOrDefault()"
                                                                       onfocusout="calc('CrCasLessorMembershipConditionsContractNo-@item.CrCasLessorMembershipConditions')"
                                                                       oninput="this.value=this.value.replace(/[^0-9]/g,'')" maxlength="7">
                                                            </div>
                                                        </div>
                                                        <!-- Hidden Fields for Result and Group -->
                                                        <input type="hidden" id="result-@item.CrCasLessorMembershipConditions" name="result-@item.CrCasLessorMembershipConditions" />
                                                        <input type="hidden" id="Group-@item.CrCasLessorMembershipConditions" name="Group-@item.CrCasLessorMembershipConditions" />
                                                    </div>
                                                </div>
                                                <div class="row align-items-center justify-content-center">
                                                    <div class="col-auto">
                                                        <img src="~/CasSys/images/membership/Frame.svg" class="">
                                                    </div>
                                                    <div class="col-auto">
                                                        <span>@(requestCulture?.RequestCulture.UICulture.Name == "en-US" ? item.CrCasLessorMembershipConditionsNavigation.CrMasSupRenterMembershipEnName : item.CrCasLessorMembershipConditionsNavigation.CrMasSupRenterMembershipArName)</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <a href="~/CasSys/index.html" data-bs-toggle="tooltip" data-bs-placement="top"
                       data-bs-custom-class="custom-tooltip" data-bs-title="@localizer["BackToHome"]"
                       class="new-Page-icon"><img src="~/CasSys/images/back to main.svg" alt="man"></a>
                </div>
            </div>
        </form>

    </div>
</div>
@section Scripts {
    <script>

        window.onload = function () {
            var array = ["1600000001", "1600000002", "1600000003", "1600000004", "1600000005"]
            console.log(array);
            for (var i = 0; i < array.length; i++) {
                calc('element-' + array[i]);
                console.log(array[i]);
            }
        }
        function calc(id) {
            var result = "";
            var idParts = id.split("-");
            var RowNumber = idParts[idParts.length - 1]; // أخذ آخر جزء من الـ ID فقط
            console.log("RowNumber:", RowNumber);
            // قيمة الـ amount
            var amount = document.getElementById('CrCasLessorMembershipConditionsAmount-' + RowNumber).value;
            result += (Number(amount) > 0) ? "V" : "E";

            // قيمة الشرط الأول (إذا لم يكن 1 أو 2، نضع 3)
            var cond1Element = document.querySelector('input[name="Conditions1_' + RowNumber + '"]:checked');
            var cond1 = cond1Element ? cond1Element.value : "3";
            result += cond1;

            // قيمة الـ Km
            var Km = document.getElementById('CrCasLessorMembershipConditionsKm-' + RowNumber).value;
            result += (Number(Km) > 0) ? "V" : "E";

            // قيمة الشرط الثاني (إذا لم يكن 1 أو 2، نضع 3)
            var cond2Element = document.querySelector('input[name="Conditions2_' + RowNumber + '"]:checked');
            var cond2 = cond2Element ? cond2Element.value : "3";
            result += cond2;

            // قيمة الـ ContractNo
            var ContractNo = document.getElementById('CrCasLessorMembershipConditionsContractNo-' + RowNumber).value;
            result += (Number(ContractNo) > 0) ? "V" : "E";

            // تحديث الحقل المخفي بالنتيجة
            document.getElementById('result-' + RowNumber).value = result;
            console.log("result", result);

            // الحصول على المجموعة
            if (result.length == 5) {
                $.ajax({
                    url: "/CAS/LessorMembership/GetMembershipGroup",
                    type: "GET",
                    data: { No: result },
                    success: function (Info) {
                        var group = Info.trim() || "N";
                        console.log("group", group);
                        document.getElementById('Group-' + RowNumber).value = group;
                    }
                });
            }
        }

    </script>
    <script>
       
        function handleCheckboxToggle(conditionId, caseNum) {
            // Get the checkbox elements based on conditionId and caseNum
            var andCaseCheckbox = document.getElementById(`AndCase${caseNum}-${conditionId}`);
            var orCaseCheckbox = document.getElementById(`OrCase${caseNum}-${conditionId}`);
            let hiddenInput = document.getElementById(`HiddenCase${caseNum}-${conditionId}`);
            // If "And" is checked, disable "Or", and vice versa
            if (andCaseCheckbox.checked) {
                orCaseCheckbox.disabled = true;
                orCaseCheckbox.checked = false; // Uncheck "Or" if "And" is checked
            } else {
                orCaseCheckbox.disabled = false;
            }

            if (orCaseCheckbox.checked) {
                andCaseCheckbox.disabled = true;
                andCaseCheckbox.checked = false; // Uncheck "And" if "Or" is checked
            } else {
                andCaseCheckbox.disabled = false;
            }
            if (andCaseCheckbox.checked) {
                hiddenInput.value = "1";
            } else if (orCaseCheckbox.checked) {
                hiddenInput.value = "2";
            } else {
                hiddenInput.value = "3"; // إذا كان كلاهما غير محدد
            }
                // Call calc function to update the results when checkbox is toggled
                var rowNumber = conditionId; // Assuming conditionId can act as the RowNumber
                calc(`CrCasLessorMembershipConditionsAmount-${rowNumber}`);
                calc(`CrCasLessorMembershipConditionsKm-${rowNumber}`);
                calc(`CrCasLessorMembershipConditionsContractNo-${rowNumber}`);
        }

        document.addEventListener('DOMContentLoaded', function () {
            var conditionIds = @Html.Raw(Json.Serialize(Model.Select(item => item.CrCasLessorMembershipConditions)));
            conditionIds.forEach(function (conditionId) {
                handleCheckboxToggle(conditionId, 1);
                handleCheckboxToggle(conditionId, 2);
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const checkboxes = document.querySelectorAll('.membership-checkbox');
            const chevrons = document.querySelectorAll('.membership-chevron');
            const cardsContainer = document.getElementById('cardsContainer');

            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function () {
                    const membershipCard = this.closest('.Membership-card');
                    const chevron = membershipCard.querySelector('.membership-chevron');
                    const dataMembershipCard = membershipCard.querySelector('.Data-Membership-card');

                    if (!this.checked) {
                        chevron.classList.add('disabled');
                        chevron.style.color = '#969494';
                        dataMembershipCard.style.display = 'none';
                        chevron.style.transform = '';
                    } else {
                        chevron.classList.remove('disabled');
                        chevron.style.color = '#000000';
                        chevron.style.transform = '';
                    }
                });
            });

            chevrons.forEach(chevron => {
                chevron.addEventListener('click', function () {
                    const membershipCard = this.closest('div[class^="Membership-card"]');
                    const dataMembershipCard = membershipCard.querySelector('.Data-Membership-card');
                    const checkbox = membershipCard.querySelector('.membership-checkbox');
                    const ImgMembershipCard = this.closest('.img-Membership-card');

                    if (checkbox.checked) {
                        if (dataMembershipCard.style.display === 'none' || dataMembershipCard.style.display === '') {
                            document.querySelectorAll('.Data-Membership-card').forEach(card => {
                                card.style.display = 'none';
                            });

                            document.querySelectorAll('.membership-chevron').forEach(otherChevron => {
                                otherChevron.style.transform = 'rotate(0deg)';
                            });

                            dataMembershipCard.style.display = 'block';
                            ImgMembershipCard.style.width = "33.33333333%";
                            chevron.style.transform = "rotate(180deg)";


                            if (window.innerWidth < 768) {
                                chevron.style.transform = "rotate(-270deg)";
                            }
                        } else {
                            dataMembershipCard.style.display = 'none';
                            chevron.style.transform = '';

                        }
                    }
                });
            });
        });

    </script>
    <script>
        function validateInput9Digit(input) {
            // Remove non-digit characters and additional decimal points
            input.value = input.value.replace(/[^0-9\.]/g, '');
            const decimalIndex = input.value.indexOf('.');

            // Limit to 9 digits before and after the decimal point
            if (decimalIndex !== -1) {
                const digitsBeforeDecimal = input.value.substring(0, decimalIndex);
                const digitsAfterDecimal = input.value.substring(decimalIndex + 1);

                // Limit to 2 digits after the decimal point
                input.value = digitsBeforeDecimal.substr(0, 9) + '.' + digitsAfterDecimal.substr(0, 2);

                // Remove additional decimal points
                if (input.value.indexOf('.', decimalIndex + 1) !== -1) {
                    const lastValidIndex = input.value.lastIndexOf('.');
                    input.value = input.value.substring(0, lastValidIndex) + input.value.substring(lastValidIndex + 1);
                }
            } else {
                // Limit to 9 digits before the decimal point
                input.value = input.value.substr(0, 9);
            }
        }
    </script>
}